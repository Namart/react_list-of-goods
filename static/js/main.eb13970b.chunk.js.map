{"version":3,"sources":["components/GoodsList/GoodsList.jsx","App.js","index.js"],"names":["GoodsList","state","isReversed","sortBy","reverse","setState","prevState","reset","goods","this","props","copy","sort","a","b","localeCompare","length","className","map","good","key","type","onClick","React","Component","goodsFromServer","App","isListVisible","showList","ReactDOM","render","document","getElementById"],"mappings":"4OAGaA,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,OAAQ,IAHZ,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,YAAaI,EAAUF,aAR7B,EAYEG,MAAQ,WACN,EAAKF,SAAS,CACZH,YAAY,EACZC,OAAQ,MAfd,4CAmBE,WAAU,IAAD,OACCK,EAAUC,KAAKC,MAAfF,MACFG,EAAI,YAAOH,GAmBjB,OAjBAG,EAAKC,MAAK,SAACC,EAAGC,GACZ,OAAQ,EAAKb,MAAME,QACjB,IAAK,OACH,OAAOU,EAAEE,cAAcD,GAEzB,IAAK,SACH,OAAOD,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAO,MAITP,KAAKR,MAAMC,YACbS,EAAKP,UAIL,oCACE,wBAAIa,UAAU,QACXN,EAAKO,KAAI,SAAAC,GAAI,OACZ,wBAAIF,UAAU,aAAaG,IAAKD,GAC7BA,OAIP,yBAAKF,UAAU,aACb,4BACEI,KAAK,SACLJ,UAAU,YACVK,QAASb,KAAKL,SAHhB,WAOA,4BACEiB,KAAK,SACLJ,UAAU,YACVK,QAAS,WACP,EAAKjB,SAAS,CACZF,OAAQ,WALd,oBAWA,4BACEkB,KAAK,SACLJ,UAAU,YACVK,QAAS,WACP,EAAKjB,SAAS,CACZF,OAAQ,aALd,kBAWA,4BACEkB,KAAK,SACLJ,UAAU,YACVK,QAASb,KAAKF,OAHhB,eA/EV,GAA+BgB,IAAMC,WCC/BC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAkCaC,E,4MA9BbzB,MAAQ,CACN0B,eAAe,G,EAGjBC,SAAW,kBAAM,EAAKvB,SAAS,CAAEsB,eAAe,K,4CAEhD,WACE,IAAQA,EAAkBlB,KAAKR,MAAvB0B,cAER,OACE,yBAAKV,UAAU,OACXU,EAEE,kBAAC,EAAD,CAAWnB,MAAOiB,IAGlB,4BACEJ,KAAK,SACLJ,UAAU,aACVK,QAASb,KAAKmB,UAHhB,c,GAjBML,IAAMC,WCbxBK,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.eb13970b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class GoodsList extends React.Component {\n  state = {\n    isReversed: false,\n    sortBy: '',\n  }\n\n  reverse = () => {\n    this.setState(prevState => ({\n      isReversed: !prevState.reverse,\n    }));\n  }\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortBy: '',\n    });\n  }\n\n  render() {\n    const { goods } = this.props;\n    const copy = [...goods];\n\n    copy.sort((a, b) => {\n      switch (this.state.sortBy) {\n        case 'name':\n          return a.localeCompare(b);\n\n        case 'length':\n          return a.length - b.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (this.state.isReversed) {\n      copy.reverse();\n    }\n\n    return (\n      <>\n        <ul className=\"list\">\n          {copy.map(good => (\n            <li className=\"list__item\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n        <div className=\"container\">\n          <button\n            type=\"button\"\n            className=\"list__btn\"\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n          <button\n            type=\"button\"\n            className=\"list__btn\"\n            onClick={() => {\n              this.setState({\n                sortBy: 'name',\n              });\n            }}\n          >\n            Sort by alphabet\n          </button>\n          <button\n            type=\"button\"\n            className=\"list__btn\"\n            onClick={() => {\n              this.setState({\n                sortBy: 'length',\n              });\n            }}\n          >\n            Sort by length\n          </button>\n          <button\n            type=\"button\"\n            className=\"list__btn\"\n            onClick={this.reset}\n          >\n            Reset\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList/GoodsList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    isListVisible: false,\n  }\n\n  showList = () => this.setState({ isListVisible: true });\n\n  render() {\n    const { isListVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        { isListVisible\n          ? (\n            <GoodsList goods={goodsFromServer} />\n          )\n          : (\n            <button\n              type=\"button\"\n              className=\"start__btn\"\n              onClick={this.showList}\n            >\n              Start\n            </button>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}